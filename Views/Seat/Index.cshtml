@model List<SeatViewModel>
@{
    ViewData["Title"] = "Gestión de Asientos";
    var tripInfo = ViewBag.TripInfo as TripDto;
    var tripId = ViewBag.TripId as int? ?? 0;
}

<!-- Breadcrumb -->
<nav aria-label="breadcrumb" class="mb-3">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")">Inicio</a></li>
        <li class="breadcrumb-item"><a href="@Url.Action("Index", "Trip")">Viajes</a></li>
        <li class="breadcrumb-item active">Asientos</li>
    </ol>
</nav>

<!-- Trip Header -->
@if (tripInfo != null)
{
    <div class="card bg-primary text-white mb-4">
        <div class="card-body">
            <h3>@tripInfo.RouteInfo</h3>
            <div class="row">
                <div class="col-md-3">Salida: <strong>@tripInfo.DepartureTime.ToString("dd/MM/yyyy HH:mm")</strong></div>
                <div class="col-md-3">Bus: <strong>@tripInfo.BusInfo</strong></div>
                <div class="col-md-3">Disponibles: <strong>@tripInfo.AvailableSeats</strong></div>
                <div class="col-md-3">Precio: <strong>@tripInfo.Price.ToString("C")</strong></div>
            </div>
        </div>
    </div>
}

<!-- Controls -->
<div class="d-flex justify-content-between align-items-center mb-4">
    <div>
        <h2>Asientos del Viaje</h2>
        <p class="text-muted">@Model.Count asientos en total</p>
    </div>
    <div>
        <a href="@Url.Action("Manage", new { tripId = tripId })" class="btn btn-outline-primary">
            <i class="fas fa-cogs me-1"></i>Gestionar
        </a>
        <button class="btn btn-outline-secondary" onclick="refreshSeats()">
            <i class="fas fa-sync-alt me-1"></i>Actualizar
        </button>
    </div>
</div>

<!-- Summary Cards -->
<div class="row mb-4">
    <div class="col-md-3">
        <div class="card bg-success text-white">
            <div class="card-body text-center">
                <h3>@Model.Count(s => !s.IsOccupied)</h3>
                <p class="mb-0">Disponibles</p>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card bg-danger text-white">
            <div class="card-body text-center">
                <h3>@Model.Count(s => s.IsOccupied)</h3>
                <p class="mb-0">Ocupados</p>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card bg-info text-white">
            <div class="card-body text-center">
                <h3>@Model.Count</h3>
                <p class="mb-0">Total</p>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card bg-warning text-dark">
            <div class="card-body text-center">
                <h3>@(Model.Any() ? ((double)Model.Count(s => s.IsOccupied) / Model.Count * 100).ToString("F1") : "0")%</h3>
                <p class="mb-0">Ocupación</p>
            </div>
        </div>
    </div>
</div>

<!-- Seats Grid -->
<div class="card">
    <div class="card-header">
        <h5>Mapa de Asientos</h5>
        <small>Verde: Disponible | Rojo: Ocupado</small>
    </div>
    <div class="card-body">
        @if (Model.Any())
        {
            <!-- Driver Area -->
            <div class="text-center mb-3">
                <div class="badge bg-secondary">Conductor</div>
            </div>

            <!-- Seats Layout -->
            <div class="row justify-content-center">
                @{
                    var seatCount = 0;
                    var orderedSeats = Model.OrderBy(s => s.SeatNumber).ToList();
                }

                @for (int row = 0; row < Math.Ceiling((double)orderedSeats.Count / 4); row++)
                {
                    <div class="row justify-content-center mb-2">
                        @for (int col = 0; col < 4; col++)
                        {
                            var seatIndex = row * 4 + col;
                            if (seatIndex < orderedSeats.Count)
                            {
                                var seat = orderedSeats[seatIndex];
                                <div class="col-auto @(col == 2 ? "ms-4" : "")">
                                    <button type="button"
                                            class="btn @(seat.IsOccupied ? "btn-danger" : "btn-success") btn-sm"
                                            data-seat-id="@seat.Id"
                                            data-seat-number="@seat.SeatNumber"
                                            data-bs-toggle="tooltip"
                                            title="Asiento @seat.SeatNumber - @(seat.IsOccupied ? "Ocupado" : "Disponible")"
                                            style="width: 50px; height: 40px; margin: 2px;"
                                            onclick="showSeatDetails(@seat.Id)">
                                        @seat.SeatNumber
                                    </button>
                                </div>
                            }
                        }
                    </div>
                }
            </div>
        }
        else
        {
            <div class="text-center py-4">
                <i class="fas fa-chair fa-3x text-muted mb-3"></i>
                <h5 class="text-muted">No hay asientos configurados</h5>
                <p class="text-muted">Configure los asientos para este viaje primero.</p>
                <a href="@Url.Action("Manage", new { tripId = tripId })" class="btn btn-primary">
                    Configurar Asientos
                </a>
            </div>
        }
    </div>
</div>

<!-- Seats List -->
@if (Model.Any())
{
    <div class="card mt-4">
        <div class="card-header">
            <h5>Lista de Asientos</h5>
        </div>
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table table-hover mb-0">
                    <thead class="table-light">
                        <tr>
                            <th>Asiento</th>
                            <th>Estado</th>
                            <th>Precio</th>
                            <th>Fecha Creación</th>
                            <th>Acciones</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var seat in Model.OrderBy(s => s.SeatNumber))
                        {
                            <tr class="@(seat.IsOccupied ? "table-danger" : "")">
                                <td>
                                    <strong>@seat.SeatNumber</strong>
                                </td>
                                <td>
                                    <span class="badge @(seat.IsOccupied ? "bg-danger" : "bg-success")">
                                        @(seat.IsOccupied ? "Ocupado" : "Disponible")
                                    </span>
                                </td>
                                <td>S/ @seat.Price.ToString("F2")</td>
                                <td>Creado recientemente</td>
                                <td>
                                    <div class="btn-group btn-group-sm">
                                        <button class="btn btn-outline-info" onclick="showSeatDetails(@seat.Id)">
                                            <i class="fas fa-eye"></i>
                                        </button>
                                        @if (!seat.IsOccupied)
                                        {
                                            <button class="btn btn-outline-warning" onclick="toggleSeatStatus(@seat.Id, true)">
                                                <i class="fas fa-lock"></i>
                                            </button>
                                        }
                                        else
                                        {
                                            <button class="btn btn-outline-success" onclick="toggleSeatStatus(@seat.Id, false)">
                                                <i class="fas fa-unlock"></i>
                                            </button>
                                        }
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
}

<!-- Seat Details Modal -->
<div class="modal fade" id="seatDetailsModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Detalles del Asiento</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body" id="seatDetailsContent">
                <!-- Content loaded via AJAX -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Initialize tooltips
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl);
            });
        });

        function showSeatDetails(seatId) {
            $('#seatDetailsContent').html('<div class="text-center"><i class="fas fa-spinner fa-spin"></i> Cargando...</div>');
            $('#seatDetailsModal').modal('show');

            // Simulate AJAX call to get seat details
            setTimeout(function() {
                var seats = @Html.Raw(Json.Serialize(Model));
                var seatData = seats.find(s => s.id === seatId);

                if (seatData) {
                    var content = `
                        <div class="row">
                            <div class="col-6"><strong>Número:</strong></div>
                            <div class="col-6">${seatData.seatNumber}</div>
                            <div class="col-6"><strong>Estado:</strong></div>
                            <div class="col-6">${seatData.isOccupied ? 'Ocupado' : 'Disponible'}</div>
                            <div class="col-6"><strong>Precio:</strong></div>
                            <div class="col-6">S/ ${seatData.price ? seatData.price.toFixed(2) : '0.00'}</div>
                            <div class="col-6"><strong>Viaje:</strong></div>
                            <div class="col-6">${seatData.tripInfo || 'Información no disponible'}</div>
                        </div>
                    `;
                    $('#seatDetailsContent').html(content);
                } else {
                    $('#seatDetailsContent').html('<p class="text-center text-muted">No se encontraron detalles del asiento.</p>');
                }
            }, 500);
        }

        function toggleSeatStatus(seatId, occupy) {
            if (confirm(occupy ? '¿Marcar asiento como ocupado?' : '¿Liberar este asiento?')) {
                // Simulate status change
                location.reload();
            }
        }

        function refreshSeats() {
            location.reload();
        }
    </script>
}